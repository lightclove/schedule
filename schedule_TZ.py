
"""
Часовой пояс и летнее время
Часовой пояс в .at()

Расписание поддерживает установку времени выполнения задания в другом часовом поясе с помощью метода .at()

Для работы с часовыми поясами должен быть установлен pytz! Надо установить:
$ pip install pytz

"""
import time
import schedule
from pytz import timezone
def job():
    print("I'm working")


# Pass a timezone as a string
schedule.every().day.at("12:42", "Europe/Amsterdam").do(job)

# Pass an pytz timezone object


schedule.every().friday.at("12:42", timezone("Africa/Lagos")).do(job)
# schedule использует часовой пояс для расчета следующего времени выполнения по местному времени.
# Все даты и время внутри библиотеки хранятся наивно.
# Это приводит к тому, что next_run и last_run всегда находятся в местном часовом поясе Python.

# Летнее время
#
# При планировании заданий с относительным временем (то есть без использования .at()) летнее время (DST) не учитывается.
# Задание, настроенное на запуск каждые 4 часа, может выполняться через 3 часа реального времени,
# когда вступает в силу летнее время.
# Это связано с тем, что расписание не учитывает часовой пояс для относительного времени.

# Летнее время
#
# При планировании заданий с относительным временем (то есть без использования .at()) летнее время (DST) не учитывается.
# Задание, настроенное на запуск каждые 4 часа, может выполняться через 3 часа реального времени,
# когда вступает в силу летнее время.
# Это связано с тем, что расписание не учитывает часовой пояс для относительного времени.
# Однако при использовании .at() летнее время передается правильно:
# задание всегда будет выполняться (или закрываться после) установленной временной метки.
# Задание, запланированное на пропущенный момент, будет выполнено после перевода часов.
# Например, задание запланировано на .at('02:30'), часы переводятся с 02:00 на 03:00, задание будет запущено в 03:00.

# Однако при использовании .at() летнее время передается правильно:
# задание всегда будет выполняться (или закрываться после) установленной временной метки.
# Задание, запланированное на пропущенный момент, будет выполнено после перевода часов.
# Например, задание запланировано на .at('02:30'), часы переводятся с 02:00 на 03:00, задание будет запущено в 03:00.

# Пример
#
# Допустим, мы находимся в Европе/Берлине, а местное время — 20 марта 2022 года, 10:00:00.
# В настоящее время в Берлине не действует летнее время (UTC+1).
#
# Мы планируем запуск задания каждый день в 10:30:00 в Америке/Нью-Йорке.
# В это время в Нью-Йорке действует летнее время (UTC-4).

s = schedule.every().day.at("10:30", "America/New_York").do(job)

# из-за 5-часовой разницы во времени между Берлином и Нью-Йорком задание должно выполняться в 15:30:00.
# Итак, следующий запуск по берлинскому времени 20 марта 2022 года, 15:30:00:
print(s.next_run)
# 2022-03-20 15:30:00

print(repr(s))
# Every 1 day at 10:30:00 do job() (last run: [never], next run: 2022-03-20 15:30:00)
